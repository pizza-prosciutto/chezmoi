#!/bin/zsh

# ASCII Art: https://patorjk.com/software/taag

cat << "EOF"
 _____  _____ __  __   ____  __    __  _____________   _______
/__  / / ___// / / /  / __ \/ /   / / / / ____/  _/ | / / ___/
  / /  \__ \/ /_/ /  / /_/ / /   / / / / / __ / //  |/ /\__ \ 
 / /_____/ / __  /  / ____/ /___/ /_/ / /_/ // // /|  /___/ / 
/____/____/_/ /_/  /_/   /_____/\____/\____/___/_/ |_//____/  

EOF

E_CMD_NOT_FOUND=1   # command not found
E_NON_EMPTY_DIR=2   # non-empty plugin directory
E_INSTALLED=3       # plugin already installed
OK=0

ERROR="\033[0;91m"
WARNING="\033[0;93m"
INFO="\033[0;36m"
RESET_COLOR="\033[0m"

typeset -A PLUGINS
PLUGINS=(zsh-syntax-highlighting "https://github.com/zsh-users/zsh-syntax-highlighting.git")

check_command() {
    if ! command -v "$1" >/dev/null 2>&1; then
        echo -e "${ERROR}>>> $1 not found, won't install zsh plugins <<<${RESET_COLOR}"
        return $E_CMD_NOT_FOUND
    fi
    return $OK
}

install_plugin() {
    local plugin=$1
    local repo_url=$2
    local plugin_dir=${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/$plugin

    if [ -d "$plugin_dir" ]; then
        echo -e "${WARNING}>>> $plugin will be skipped: non-empty target directory [$plugin_dir] <<<${RESET_COLOR}"
        return $E_NON_EMPTY_DIR
    fi

    if grep -qE "^plugins=\([^)]*\b$plugin\b[^)]*\)$" ~/.zshrc; then
        echo -e "${WARNING}>>> $plugin is already enabled in ~/.zshrc, will be skipped <<<${RESET_COLOR}"
        return $E_INSTALLED
    fi

    echo -e "${INFO}>>> Installing $plugin <<<${RESET_COLOR}"
    git clone "$repo_url" "$plugin_dir"
    omz plugin enable "$plugin"
    return $OK
}

[ -f "$ZSH/oh-my-zsh.sh" ] && . "$ZSH/oh-my-zsh.sh"

if check_command "git" && check_command "omz"; then
    for plugin in ${(k)PLUGINS}; do
        if install_plugin "$plugin" "$PLUGINS[$plugin]"; then
            echo -e "${INFO}>>> $plugin successfully installed <<<${RESET_COLOR}"
        fi
    done
fi

return 0
